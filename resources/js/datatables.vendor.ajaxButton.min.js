
$(window).on("beforeunload", function() { 
    if($('.editorchanged').length > 0)
        return confirm("Do you really want to close?"); 
});

window.setContainerCanSendData = function (target, value)
{
    if ($(target).parent().prop('tagName') == 'TD')
        $(target).closest('tr').addClass('editorcansave');
}

window.setSendSendableEditorFields = function(target)
{
    if ($(target).parent().prop('tagName') == 'TD')
        $(target).closest('tr').find('.editorchanged').each(function()
        {
            $(this).trigger('blur');
        });
}

window.editorFieldHasChanged = function (target)
{
    var val = $(target).val();
    var oldVal = $(target).data('originalvalue');

    if ((val === '') && (oldVal === 0))
        return true;

    return oldVal != val;
};

window.fieldHasUpdateOnSave = function(target)
{
    var th = window.__getTH(target);

    return $(th).data('editorsavebutton');
}

window.fieldCanSendData = function (target)
{
    if(! window.fieldHasUpdateOnSave(target))
        return true;

    if ($(target).parent().prop('tagName') == 'TD')
        return $(target).closest('tr').hasClass('editorcansave');
}

window.manageEditorFieldSavingPermission = function (target)
{
    if (window.fieldCanSendData(target) == true)
        return true;

    $(target).addClass('editorchanged');

    return false;
};

window.__mustRedirectSubmit = function (target) {
    if ($(target).data('redirectsubmit')) return true;
    return false;
};

window.__getDTTableHeaderFilters = function (target)
{
    let filters = {};

    let table = $('#' + target).find('.sectionheader');

    let filterInputs = table.find('input');

    filterInputs.each(function ()
    {
        let name = $(this).attr('name');
        let value = $(this).val();

        // if (value != '')
        filters[name] = value;
    });

    return filters;
}

$(document).ready(function($)
{
    $('body').on('click', '.ib-editor-save', function (e)
    {
        window.setContainerCanSendData(this, true);
        window.setSendSendableEditorFields(this, true);
    });

    $('body').on('click', '.datatable td a', function (e)
    {
        if (! __isHeaderConfirmed(e))
            return false;
    });

    $('body').on('click', '.ib-table-action-button', function(e)
    {
        e.preventDefault();

        var target = this;

        if(window.__mustOpenIframe(target))
            return window.__openIframe(target);

        if(window.__mustRedirectSubmit(target))
            return window.__redirectSubmit(target);

        var modal = $('#deliveries-modal');
        if(modal.length)
            UIkit.modal(modal).hide();

        var tableid = $(this).data('tableid');
        var table = $('#' + tableid).DataTable();

        let idColumnIndex = window.__getIdColumnIndex(this, table);

        let selectedRows = table.rows( { selected: true } );
        var ids = selectedRows.data().pluck(idColumnIndex).toArray();

        var url = $(this).data('route');

        // window.open(url + '?iframed=true&callertablename=' + tableVarName, 'window', 'width=960, height=600, toolbar=no, menubar=no, resizable=yes');

        // openWindowWithPost(url, {
        //     ids: ids,
        // });


        // return false;

        $.ajax({
            url : url,
            type : 'POST',
            data : {
                ids : ids
            },
            success : function (response)
            {
                if(response.success == false)
                    return this.error(response);

                // if(typeof response.notReload === 'undefined')
                //     table.ajax.reload();

                if(response.success == true)
                    window.addSuccessNotification(response.message);

                if (response.ibaction == 'redirect') window.location.href = response.href;

                if((typeof response.action !== 'undefined'))
                {
                    if(response.action == 'reloadTable')
                    {
                        table.rows().deselect();
                        window.reloadDatatable(table);
                    }

                    else if(response.action == 'reload')
                        location.reload();

                    else if(response.action == 'redirect')
                        window.location.href = response.route;

                    if(response.action == 'remove')
                    {
                        response.ids.forEach(function(value)
                        {
                            table.row("#" + value).remove();
                        });
                        
                        table.draw();
                    }
                }

                window.__checkResultPopup(response, {
                    target: target
                });

                window.__displayResponseErrors(response);
            },
            error: function (response)
            {
                window.reloadDatatable(table);
                table.draw();

                window.__displayResponseErrors(response);
            }
        });
    });


    $('body').on('click', '.ib-toggle', function(e)
    {
        let th = window.__getTH(e.target);

        let value = $(this).data('value');

        if(value === '')
            value = true;
        else if((value === 1)||(value === "true")||(value === true))
            value = false;
        else if((value === 0)||(value === "false")||(value === false))
        {
            if($(th).data('nullable'))
                value = null;
            else
                value = true;
        }

        var params = {
            target: this,
            e: e,
            type: 'POST',

            data: {
                "ib-editor": true,
                field: $(this).data('field'),
                value: value,
                _method: 'PUT'
            }

            // data: {
            // "ib-editor": true,
            // toggle: true,
            // field: $(this).data('field'),
            // _method: 'PUT'
            // }
        };

        window.ibCallAjax(params);
    });

    $('body').on('click', '.ib-ajax', function(e)
    {
        let data = $(this).data();

        data['ib-editor'] = true;
        data._method = 'PUT';

        var params = {
            target : this,
            e : e,
            type : 'POST',
            data : data
        };

        window.ibCallAjax(params);
    });

    $('body').on('focus', '.ib-editor-color', function(e)
    {
        $(target).data('originalvalue', $(target).val());
    });

    $('body').on('blur', '.ib-editor-color', function(e)
    {
        if(! window.editorFieldHasChanged(this))
            return false;

        var params = {
            target : this,
            e : e,
            type : 'POST',
            data : {
                "ib-editor" : true,
                field : $(this).data('field'),
                value : $(this).val(),
                _method : 'PUT',
            }
        };

        window.ibCallAjax(params);
    });


    // $('body').on('keyup', '.ib-editor-text', function(e)
    // {
        // var code = e.keyCode || e.which;

        // if(code == 13)
        // {
        //     let table = window.__getTableByCell(this);
        //     let datatable = table.DataTable();
        //     datatable.keys.enable();

        //     return;
        // }

        // let table = window.__getTableByCell(this);
        // let datatable = table.DataTable();
        // datatable.keys.disable();
    // });

    $('body').on('blur', '.ib-editor-text', function(e)
    {
        if(! window.editorFieldHasChanged(this))
            return false;

        var params = {
            target : this,
            e : e,
            type : 'POST',
            data : {
                "ib-editor" : true,
                field : $(this).data('field'),
                value : $(this).val(),
                _method : 'PUT',
            }
        };

        window.ibCallAjax(params);
    });

    $('body').on('click', '.ib-editor-select', function(e)
    {
        if($(this).data('populated'))
            return ;

        if($(this).data('populating'))
            return ;


        $(this).data('populating', true);

        let currentValue = $(this).val();

        let th = window.__getTH(this);
        let possibleValues = th.data('possiblevalues');

        for (var key in possibleValues)
        {
            if(key == currentValue)
                continue;

            $(this).append('<option value="' + key + '">' + possibleValues[key] + '</option>');
        }

        $(this).data('populated', true);
        $(this).data('populating', false);
    });

    $('body').on('change', '.ib-editor-select', function(e)
    {
        if (!window.editorFieldHasChanged(this)) return false;
        let value = $(this).val();

        if(value == 'null')
            value = null;

        if (value == $(this).data('originalvalue')) return false;
        var params = {
            target: this,
            e: e,
            type: 'POST',
            data: {
                "ib-editor": true,
                field: $(this).data('field'),
                value: value,
                _method: 'PUT'
            }
        };
        window.ibCallAjax(params);
    });

    $('body').on('click', '.ib-cell-ajax-button', function(e)
    {
        e.preventDefault();

        let sendingData = {};

        // var data = $(this).data('datas');

        // if($(this).data('dataattributes'))
        //     data = collectDataAttributes(this);

        // else if($(this).data('elements'))
        //     data = collectDatas(this);

        // if($(this).data('dataattributes'))
        //     var sendingData = data;
        // else
        //     var sendingData = {data : data};

        if($(this).data('method'))
            sendingData._method = $(this).data('method');

        var params = {
            target : this,
            e : e,
            data : sendingData
        };

        window.ibCallAjax(params);
    });
});
    