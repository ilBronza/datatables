$.fn.dataTable.Api.register('hasDuplicatesActive()', function (table = null)
{
    if(! table)
        table = this.getTableElement();

    return this.getDataAttribute('doubler', table);
});

$.fn.dataTable.Api.register('toggleShowDuplicates()', function (table = null)
{
    if(! table)
        table = this.getTableElement();

    if(typeof table.data('showDuplicates') === 'undefined')
        return table.data('showDuplicates', true);

    table.data('showDuplicates', ! table.data('showDuplicates'));
});

window.__showTableDuplicates = function(table)
{
    let _table = table.table().node();

    $(_table).find('th.doubler').each(function ()
    {
        var columnIndex = $(this).data('column');
        var columnName = $(this).data('camelname');
        var names = window.__getTableArrayNames(table, columnIndex);
        window.__showDuplicates(table, names, columnIndex, columnName);
    });
}

window.__showDuplicates = function(datatable, names, columnIndex, columnName)
{
    datatable.rows().eq( 0 ).map( function (rowIdx)
    {
        var nameCell = datatable.cell( rowIdx, columnIndex );
        var name = String(nameCell.data());

        if(names[name] > 1)
        {
            $(nameCell.node()).addClass('doubled');

            $(nameCell.node()).closest('tr').addClass('double' + columnName);
        }
    });
}

window.__getTableArrayNames = function(datatable, columnIndex, dataIndex = null)
{
    let names = [];

    datatable.rows().eq( 0 ).map( function (rowIdx)
    {
        var nameCell = datatable.cell( rowIdx, columnIndex );
        var name = String(nameCell.data());

        if(typeof names[name] === 'undefined')
            names[name] = 0;

        names[name] += 1;
    });

    return names;
}
