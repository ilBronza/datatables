$.fn.dataTable.Api.register('applyTableFilters()', function (dataName)
{
    let api = this;
    this.columns().every(function ()
    {
        let header = this.header();

        if(! $(header).data('filterable'))
            return ;

        if($(header).data('range'))
            return api.applyRangeFilter(this);

        return api.applyNormalFilter(this);
    });
});

$.fn.dataTable.Api.register('applyRangeFilter()', function (dataName)
{
    console.log('appluRangeFilter');
    var table = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
});

$.fn.dataTable.Api.register('applyNormalFilter()', function (target)
{
    console.log('applyNormalFilter');
    console.log(target);
        return false;
    
    var previousValue = $(target).data('value') ? $(target).data('value') : '';
        return false;
    
    var value = $(target).val().toLowerCase();
    
    if ($(target).attr('type') == 'date') value = new Date(value).getTime() / 1000;
        $(target).data('value', value); // if(container.search() !== value)
    // {

    if (searchValue)
    {
        if (previousValue == value)
            return false;
    
        clearTimeout(window.searchTimeout);
    
        var timeInterval = container.settings()[0].searchDelay ? container.settings()[0].searchDelay : 350;
    
        window.searchTimeout = setTimeout(function ()
        {
            console.log(container);
            container.search(value, true, false);
            
            if (draw)
                table.draw();
        }, timeInterval);
    } // else
    //     container.draw();
    // }        

});





$(document).ready(function($)
{
    $('body').on('mouseenter', '.datatablefilter', function()
    {
        $(this).find('.filterfunctions').removeClass('uk-hidden');
    });

    $('body').on('mouseleave', '.datatablefilter', function()
    {
        $(this).find('.filterfunctions').addClass('uk-hidden');
    });

    $('body').on('click', '.filterfunctions .close', function(e)
    {
        e.stopPropagation();

        $(this).closest('.datatablefilter').find('input, select, textarea').each(function()
        {
            $(this).val('');
            $(this).change();
        });
    });

    $('th input').click(function(e)
    {
        e.stopPropagation();
    });

    $('input[type="date"]').change(function()
    {
        $(this).data('timestamp', new Date($(this).val()).getTime() / 1000);
    });
    
    window.normalFilter = function (table, container, section)
    {
        window._filter(table, container, section, true);
    }

    window.rangeFilter = function (table, container, section)
    {
        window._filter(table, container, section);
    }

    window._filterByEnter = function(table, container, section, searchValue)
    {
        $('input', section).on('keypress', function (e)
        {
            if(e.which == 13)
            {
                e.preventDefault();
                e.stopPropagation();

                console.log('de dio');
                table.draw();                
            }

            window.__filterByColumnValue(table, this, container, section, searchValue, false);
        });
    }

    window.__filterByColumnValue = function(table, target, container, section, searchValue, draw = true)
    {
        let previousValue = $(target).data('value')? $(target).data('value') : '';

        let value = $(target).val().toLowerCase();

        if($(target).attr('type') == 'date')
            value = new Date(value).getTime() / 1000;

        $(target).data('value', value);

        // if(container.search() !== value)
        // {
            if(searchValue)
            {
                if(previousValue == value)
                  return false;

                clearTimeout(window.searchTimeout);

                let timeInterval = (container.settings()[0].searchDelay)? container.settings()[0].searchDelay : 350;

                window.searchTimeout = setTimeout(function ()
                {
                    console.log(container);

                    container.search(value, true, false);

                    if(draw)
                        table.draw();
                }, timeInterval);
            }

            // else
            //     container.draw();
        // }        
    }

    window.__filterByNormalBehaviour = function(table, container, section, searchValue)
    {
        $('input', section).on('keypress change click clear', function ()
        {
            window.__filterByColumnValue(table, this, container, section, searchValue);
        });
    }

    window._filter = function (table, container, section, searchValue = false)
    {
        // let filterOnEnter = true;
        let filterOnEnter = false;

        if(filterOnEnter)
            return window._filterByEnter(table, container, section, searchValue);

        return window.__filterByNormalBehaviour(table, container, section, searchValue);
    }

});